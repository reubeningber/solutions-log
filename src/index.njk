---
layout: layout.njk
eleventyExcludeFromCollections: true
title: Solutions Log
permalink: /index.html
---

<section id="entries" class="entries-grid">
  {% for post in collections.entries %}
  <article class="entry" data-tags="{% if post.data.tags and post.data.tags.length %}{% for t in post.data.tags %}{{ t | slug }}{% if not loop.last %},{% endif %}{% endfor %}{% endif %}">
    <header class="entry-head">
      <h3 class="entry-title">
        <a href="{{ post.url | url }}">{{ post.data.title }}</a>
      </h3>
      <time datetime="{{ post.date | date('yyyy-MM-dd') }}" class="entry-date">
        {{ post.date | date("yyyy-MM-dd") }}
      </time>
    </header>

    {% if post.data.tags and post.data.tags.length %}
      <div class="tags">
        {% for t in post.data.tags %}
          <button class="chip chip-link" type="button" data-filter="{{ t | slug }}" aria-label="Filter by {{ t }}">{{ t }}</button>
        {% endfor %}
      </div>
    {% endif %}

    <p class="excerpt">
      {{ post.templateContent | striptags | trim | stripContext | truncate(180, true, "â€¦") }}
    </p>

  </article>
  {% endfor %}
</section>

<p id="no-results" hidden><em>No entries match this filter.</em></p>

<div class="tools">
  <div class="filters filters-compact" role="radiogroup" aria-label="Filter by tag">
    <strong class="filters-label">Filter:</strong>
    <button class="tag active" data-filter="all" aria-pressed="true">All</button>
    {% for tag in collections.entries | uniquetags %}
      <button class="tag" data-filter="{{ tag | slug }}" aria-pressed="false">{{ tag }}</button>
    {% endfor %}
  </div>
</div>

<script>
(() => {
  const bar = document.querySelector('.filters-compact');
  if (!bar) return;

  const buttons = [...bar.querySelectorAll('.tag')];
  const cards = [...document.querySelectorAll('[data-tags]')];
  const noResults = document.getElementById('no-results');

  const norm = s => (s || '').toString().trim().toLowerCase();

  function apply(val){
    const target = norm(val);
    // toggle button states
    buttons.forEach(b => {
      const on = (norm(b.dataset.filter) === target) || (target === 'all' && norm(b.dataset.filter) === 'all');
      b.classList.toggle('active', on);
      b.setAttribute('aria-pressed', on);
    });
    // show/hide cards
    let shown = 0;
    cards.forEach(card => {
      const list = (card.dataset.tags || '').split(',').map(norm).filter(Boolean);
      const show = (target === 'all') || list.includes(target);
      card.hidden = !show;
      if (show) shown++;
    });
    if (noResults) noResults.hidden = shown !== 0;

    // If nothing matched (e.g., stale saved tag), fall back to ALL
    if (shown === 0 && target !== 'all') {
      return apply('all');
    }

    try { localStorage.setItem('sl:tag', target); } catch(e){}
  }

  // Filter bar clicks
  bar.addEventListener('click', (e) => {
    const btn = e.target.closest('.tag'); if (!btn) return;
    apply(btn.dataset.filter);
  });

  // Card chip clicks
  document.addEventListener('click', (e) => {
    const chip = e.target.closest('.chip-link'); if (!chip) return;
    apply(chip.dataset.filter);
    // Optional: scroll the filter bar into view
    // bar.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
  });

  // Initialize from saved choice (only if present), else 'all'
  const saved = norm(localStorage.getItem('sl:tag') || 'all');
  const valid = buttons.some(b => norm(b.dataset.filter) === saved) ? saved : 'all';
  apply(valid);
})();
</script>
