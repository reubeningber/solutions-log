name: Build, Encrypt, and Deploy (StatiCrypt)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # 1) Build Eleventy
      - name: Build site
        run: npm run build

      # 2) (optional) Build Pagefind index
      - name: Build Pagefind index
        run: npx pagefind --source _site

      # 3) Verify Eleventy output has a root index.html
      - name: Verify _site contents
        run: |
          ls -la _site | sed -n '1,200p'
          test -f _site/index.html

      # 4) Encrypt ALL HTML directly into encrypted/
      #    IMPORTANT: do NOT quote the glob; Bash must expand _site/* here.
      - name: Encrypt HTML with StatiCrypt
        shell: bash
        env:
          SITE_PASSWORD: ${{ secrets.SITE_PASSWORD }}
          SALT: ${{ secrets.SALT }}
        run: |
          shopt -s nullglob      # make unmatched globs expand to empty
          npx staticrypt _site/* -r -p "$SITE_PASSWORD" --salt "$SALT" \
            -d encrypted --template-title "Solutions Log" --config false

      # 5) Copy non-HTML assets (CSS, JS, images, Pagefind bundle)
      - name: Copy non-HTML assets
        run: rsync -a --exclude='**/*.html' _site/ encrypted/

      # 6) Prevent Jekyll & verify artifact root has index.html
      - name: Add .nojekyll
        run: touch encrypted/.nojekyll

      - name: Verify artifact root
        run: |
          ls -la encrypted | sed -n '1,200p'
          # show any index.html we have (debug)
          find encrypted -maxdepth 3 -name 'index.html' -type f -print
          test -f encrypted/index.html

      # 7) Upload artifact for Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: encrypted

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
