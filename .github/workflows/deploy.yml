name: Build, Encrypt, and Deploy (StatiCrypt)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # 1) Build Eleventy output to _site
      - name: Build site
        run: npm run build

      # 2) Sanity check: _site has a root index.html
      - name: Verify _site contents
        run: |
          ls -la _site | sed -n '1,200p'
          test -f _site/index.html

      # 3) Encrypt ALL files in _site (HTML will be encrypted; non-HTML copied)
      #    IMPORTANT: use the env var STATICRYPT_PASSWORD (no -p), and do not quote the glob.
      - name: Encrypt with StatiCrypt
        shell: bash
        env:
          STATICRYPT_PASSWORD: ${{ secrets.SITE_PASSWORD }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          npx -y staticrypt@3 _site/* -r -d encrypted --config false --salt "$SALT" --remember 30

          # StatiCrypt puts outputs under ./encrypted/..., including index.html if present

      # 4) If your StatiCrypt version didn't copy non-HTML, ensure theyâ€™re present
      - name: Copy non-HTML assets (safety)
        run: rsync -a --exclude='**/*.html' _site/ encrypted/

      # 5) Prevent Jekyll & verify artifact has a root index.html
      - name: Finalize artifact
        run: |
          touch encrypted/.nojekyll
          echo "Artifact root:" && ls -la encrypted | sed -n '1,200p'
          echo "Sample encrypted pages:" && find encrypted -maxdepth 3 -name '*.html' -type f | sed -n '1,25p'
          test -f encrypted/index.html

      # 6) Upload artifact for Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: encrypted

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
