name: Build, Encrypt, and Deploy (StatiCrypt)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      # Build Eleventy
      - name: Build site
        run: npm run build

      # (Optional) Pagefind index
      - name: Build Pagefind index
        run: npx pagefind --source _site

      # Sanity check: confirm Eleventy produced a root index.html
      - name: Verify _site contents
        run: |
          ls -la _site | sed -n '1,120p'
          test -f _site/index.html

      # Encrypt *files inside* _site (flattened), recursively
      # NOTE: use "_site/*" (NOT just "_site") so we don't get an extra "/_site" layer
      - name: Encrypt HTML with StatiCrypt
        run: npx staticrypt "_site/*" "$SITE_PASSWORD" -r --salt "$SALT" -d encrypted --template-title "Solutions Log" --config false
        env:
          SITE_PASSWORD: ${{ secrets.SITE_PASSWORD }}
          SALT: ${{ secrets.SALT }}

      # StatiCrypt v3 copies non-HTML files for you; this rsync is optional.
      # If you want to be explicit, keep it:
      - name: Copy non-HTML assets
        run: rsync -a --exclude='**/*.html' _site/ encrypted/

      # Prevent Jekyll & verify the artifact root has index.html
      - run: touch encrypted/.nojekyll

      - name: Verify artifact root
        run: |
          ls -la encrypted | sed -n '1,120p'
          test -f encrypted/index.html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
